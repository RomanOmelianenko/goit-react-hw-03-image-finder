{"version":3,"sources":["components/styles.module.css","components/Loader.js","components/Notification.js","components/ImageGalleryItem.js","components/ImageGallery.js","services/ImagesApi.js","components/Searchbar.js","components/Button.js","components/Modal.js","components/App.js","index.js"],"names":["module","exports","Spinner","className","styles","Loader","type","color","height","width","Notification","message","ImageGalleryItem","smallImage","largeImage","onClick","ImageGalleryItemImage","src","alt","ImageGallery","images","map","image","webformatURL","largeImageURL","id","fetchImages","fetchImagesWithQuery","searchQuery","page","baseUrl","apiKey","url","axios","get","then","response","data","hits","Searchbar","state","inputValue","handleChangeInput","e","setState","target","value","handleSubmitForm","preventDefault","props","onSubmit","SearchForm","this","SearchFormButton","SearchFormButtonLabel","SearchFormInput","onChange","autoComplete","autoFocus","placeholder","Component","Button","Modal","onPressEscape","event","code","onCloseModal","onClickNotImageCloseModal","nodeName","window","addEventListener","removeEventListener","Overlay","onOpenlargeImage","App","loading","error","openModal","largeImageUrl","ImagesApi","prevState","catch","finally","success","title","text","handleSearchFormSubmit","query","onOpenModal","prevProps","prevQuery","nextQuery","length","scrollTo","top","document","documentElement","scrollHeight","behavior","ReactDom","render","querySelector"],"mappings":"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","file":"static/js/main.5c9607cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"styles_App__3Rvjd\",\"Searchbar\":\"styles_Searchbar__2thH7\",\"SearchForm\":\"styles_SearchForm__fnJ2H\",\"SearchFormButton\":\"styles_SearchFormButton__3nn4m\",\"SearchFormButtonLabel\":\"styles_SearchFormButtonLabel__3gEOq\",\"SearchFormInput\":\"styles_SearchFormInput__2nqx_\",\"ImageGallery\":\"styles_ImageGallery__128al\",\"ImageGalleryItem\":\"styles_ImageGalleryItem__1kJos\",\"ImageGalleryItemImage\":\"styles_ImageGalleryItemImage__3oCGk\",\"Overlay\":\"styles_Overlay__-hiM1\",\"Modal\":\"styles_Modal__13IBg\",\"Button\":\"styles_Button__5vNME\",\"Loader\":\"styles_Loader__-0pHB\"};","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from './styles.module.css';\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <Loader\r\n            className={styles.Loader}\r\n            type=\"Circles\"\r\n            color=\"#e8f318\"\r\n            height={80}\r\n            width={80}\r\n        />\r\n    )\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nfunction Notification(message) {\r\n    return (\r\n        <p>{message}</p>\r\n    )\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport styles from './styles.module.css';\r\n\r\nfunction ImageGalleryItem ({ smallImage, largeImage, onClick }) {\r\n    return (\r\n        <>\r\n            <li className={styles.ImageGalleryItem}>\r\n                <img\r\n                    className={styles.ImageGalleryItemImage}\r\n                    onClick={() => onClick(largeImage)}\r\n                    src={smallImage}\r\n                    alt=\"\"\r\n                    width=\"\"\r\n                />\r\n            </li>\r\n        </>\r\n    )};\r\n\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport ImageGalleryItem from './ImageGalleryItem'\r\nimport styles from './styles.module.css';\r\n\r\nfunction ImageGallery({ images, onClick }) {\r\n    return (\r\n        <ul className={styles.ImageGallery}>\r\n            {images.map(image => (\r\n                <ImageGalleryItem\r\n                    key={image.id}\r\n                    smallImage={image.webformatURL}\r\n                    largeImage={image.largeImageURL}\r\n                    onClick={onClick}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ImageGallery;","import axios from 'axios';\r\n\r\nconst fetchImagesWithQuery = (searchQuery, page = 1)  => {\r\n    const baseUrl = 'https://pixabay.com/api/';\r\n    const apiKey = '18838067-90d811c5126886249211760e4';\r\n    const url = `${baseUrl}?q=${searchQuery}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`;\r\n    \r\n    return axios\r\n        .get(url)\r\n        .then(response => response.data.hits)\r\n};\r\n\r\nconst fetchImages = {fetchImagesWithQuery}\r\n\r\nexport default fetchImages;\r\n","import React, { Component } from 'react';\r\nimport styles from './styles.module.css';\r\n\r\nclass Searchbar extends Component {\r\n\r\n    state = {\r\n        inputValue: '',\r\n    };\r\n\r\n    handleChangeInput = e => {\r\n        this.setState({ inputValue: e.target.value })\r\n    };\r\n\r\n    handleSubmitForm = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.inputValue);\r\n        this.setState({ inputValue: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header\r\n                className={styles.Searchbar}>\r\n                <form\r\n                    className={styles.SearchForm}\r\n                    onSubmit={this.handleSubmitForm}\r\n                    >\r\n                    <button type=\"submit\" className={styles.SearchFormButton}>\r\n                        <span className={styles.SearchFormButtonLabel}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={styles.SearchFormInput}\r\n                        type=\"text\"\r\n                        value={this.state.inputValue}\r\n                        onChange={this.handleChangeInput}\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }; \r\n};\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport styles from './styles.module.css';\r\n\r\nfunction Button({ onClick }) {\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            className={styles.Button}\r\n            onClick={onClick}\r\n        >\r\n            Load more\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport styles from './styles.module.css';\r\n\r\nclass Modal extends Component {\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.onClickNotImageCloseModal)\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.onClickNotImageCloseModal)\r\n    }\r\n\r\n    onPressEscape = event => {\r\n        if (event.code === 'Escape') {\r\n            this.props.onCloseModal();\r\n        };\r\n    };\r\n\r\n    onClickNotImageCloseModal = event => {\r\n        if (event.target.nodeName !== 'IMG') {\r\n            this.props.onCloseModal()\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.Overlay} onClick={this.onClickNotImageCloseModal}>\r\n                <div className={styles.Modal}>\r\n                    <img src={this.props.onOpenlargeImage} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from './Loader';\r\nimport Notification from './Notification';\r\nimport ImageGallery from './ImageGallery';\r\nimport ImagesApi from '../services/ImagesApi';\r\nimport Searchbar from './Searchbar';\r\nimport Button from './Button';\r\nimport Modal from './Modal';\r\n// import InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nimport { success } from '@pnotify/core';\r\nimport '@pnotify/core/dist/PNotify.css';\r\n// import * as PNotifyMobile from '@pnotify/mobile';\r\n// import '@pnotify/mobile/dist/PNotifyMobile.css';\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    static propTypes = {\r\n        images: PropTypes.array,\r\n        loading: PropTypes.bool,\r\n        error: PropTypes.string,\r\n        searchQuery: PropTypes.string,\r\n        page: PropTypes.number,\r\n        showModal: PropTypes.bool,\r\n        largeImageUrl: PropTypes.string\r\n    };\r\n    \r\n    state = {\r\n        images: [],\r\n        loading: false,\r\n        error: null,\r\n        searchQuery: '',\r\n        page: 1,\r\n        openModal: false,\r\n        largeImageUrl: null\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const prevQuery = prevState.searchQuery;\r\n        const nextQuery = this.state.searchQuery;\r\n        const { images } = this.state;\r\n\r\n        if (prevQuery !== nextQuery) {\r\n            this.fetchImages();\r\n        } \r\n\r\n        if (images.length) {\r\n            window.scrollTo({\r\n                top: document.documentElement.scrollHeight,\r\n                behavior: 'smooth',\r\n            });\r\n        };\r\n    };\r\n\r\n    fetchImages = () => {\r\n        const { searchQuery, page, images } = this.state;\r\n\r\n        this.setState({ loading: true });\r\n\r\n        ImagesApi\r\n            .fetchImagesWithQuery(searchQuery, page)\r\n            .then(images =>\r\n                this.setState(prevState =>\r\n                ({\r\n                    images: [...prevState.images, ...images],\r\n                    page: prevState.page + 1\r\n                })))\r\n            .catch(error => this.setState({ error }))\r\n            .finally(() => this.setState({ loading: false }));\r\n        \r\n        if (images !== []) {\r\n            success({\r\n                title: 'Success',\r\n                text: 'Images uploaded!'\r\n            });\r\n        }\r\n        // else if (error !== null) {\r\n        //     error({\r\n        //         title: 'Error',\r\n        //         text: 'Having problems downloading!'\r\n        //     });\r\n        // };\r\n    };\r\n\r\n    handleSearchFormSubmit = query => {\r\n        this.setState({ searchQuery: query, page: 1, images: [] });\r\n    };\r\n\r\n    onOpenModal = largeImageUrl => {\r\n        this.setState(state => ({\r\n            openModal: !state.openModal,\r\n            largeImageUrl: largeImageUrl\r\n        }));\r\n    };\r\n\r\n    onCloseModal = () => {\r\n        this.setState(prevState => ({\r\n            openModal: !prevState.openModal,\r\n            largeImageUrl: null\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        const { images, loading, error, openModal, largeImageUrl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Searchbar onSubmit={this.handleSearchFormSubmit} />\r\n\r\n                {error && <Notification message={`Whoops, something went wrong: ${error.message}`} />}\r\n\r\n                {images.length > 0 &&\r\n                    // <InfiniteScroll dataLength={images.length}\r\n                    //                 next={this.fetchImages}\r\n                    //                 hasMore={true}\r\n                    // >\r\n                    <ImageGallery images={images} onClick={this.onOpenModal} />\r\n                    \r\n                    // </InfiniteScroll>\r\n                }\r\n\r\n                {openModal && <Modal onOpenlargeImage={largeImageUrl} onCloseModal={this.onCloseModal}/>}\r\n                \r\n                {loading && <Loader/>}\r\n\r\n                {images.length > 0 && !loading && <Button onClick={this.fetchImages}/>}\r\n            </>\r\n        );\r\n    };\r\n};","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDom.render(<App/>, document.querySelector('#root') )"],"sourceRoot":""}